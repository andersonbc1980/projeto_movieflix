name: Build, Test and Push Docker Image

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Pega o código do repositório
      - name: Checkout do código
        uses: actions/checkout@v3
        
      # 2. Login no Docker Hub
      - name: Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 3. Build da imagem
      - name: Build da imagem
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/movieflix-app:latest .
             
      # 4. Criar rede 
      - name: Criar rede docker 
        run: docker network create movieflix-net
      
      # 5. Subir Postgres 
      - name: Rodar Postgres 
        run: | 
          docker run -d --name postgres-dados --network movieflix-net -e POSTGRES_USER=user -e POSTGRES_PASSWORD=secret -e POSTGRES_DB=movieflix-db -p 5432:5432 postgres:15 
          sleep 10
     
      # 6. Rodar aplicação 
      - name: Subir aplicação 
        run: | 
          docker run -d --name movieflix-app --network movieflix-net -e DB_HOST=postgres-dados -e DB_USER=user -e DB_PASSWORD=secret -e DB_NAME=movieflix-db ${{ secrets.DOCKERHUB_USERNAME }}/movieflix-app:latest
          sleep 15
        
      # 7. Build e rodar Nginx 
      - name: Subir Nginx proxy 
        run: | 
          docker build -t movieflix-nginx ./Proxy-reverso 
          docker run -d --name proxy --network movieflix-net -p 5000:80 movieflix-nginx 
          sleep 5  
      
      # 8. Teste via proxy reverso 
      - name: Testar aplicação via Nginx 
        run: | 
          curl -f http://localhost:5000/ || (echo "Teste falhou" && exit 1)

      # 9. Push da imagem para o Docker Hub 
      - name: Push da imagem 
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/movieflix-app:latest  

      # 10. Limpeza
      - name: Limpar containers e rede
        if: always()
        run: |
          echo "Parando e removendo containers e rede temporários..."
        docker stop postgres-dados movieflix-app proxy || true
        docker rm postgres-dados movieflix-app proxy || true
        docker network rm movieflix-net || true
